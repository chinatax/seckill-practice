spring:
   datasource:
      url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&connectTimeout=3000&socketTimeout=1000&serverTimezone=GMT&useSSL=false
      username: root
      password: 111
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      minIdle: 5
      maxActive: 100
      initialSize: 10
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 50
      removeAbandoned: true
      filters: stat # ,wall,log4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      useGlobalDataSourceStat: true # 合并多个DruidDataSource的监控数据
      druidLoginName: wjf # 登录druid的账号
      druidPassword: wjf # 登录druid的密码
      cachePrepStmts: true  # 开启二级缓存
      #配置sentinel的地址即可,因为sentinel是监视所有redis节点的,springboot就可以通过sentinel访问到其他redis节点
#   redis:
  #      sentinel:
  #         master: mymaster
  #         nodes: 192.168.245.5:26000
  #redis集群的连接方式,
  #导入包,定义redistemplate,用下面的连接,其他跟普通用法相同

   redis:
     lettuce:
       pool:
         commandTimeout: 10000  #redis操作的超时时间
         maxTotal: 5000 #最大连接数
         maxIdle: 30 #最大空闲连接数
         minIdle: 5 #最小空闲连接数
         maxWait: 3000  #获取连接最大等待时间 ms  #default -1
     cluster:
       nodes: 192.168.245.5:7000,192.168.245.5:7001,192.168.245.5:7002,192.168.245.5:7003,192.168.245.5:7004,192.168.245.5:7005
       max-redirects: 3
     password:
     timeout:

mybatis:
   typeAliasesPackage: com.sxfdu.redis.mapper
   mapperLocations: classpath:/com/sxfdu/redis/mapper/*.xml
   mapperScanPackage: com.sxfdu.redis.mapper
   configLocation: classpath:/mybatis-config.xml